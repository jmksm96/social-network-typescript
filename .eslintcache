[{"D:\\Projects\\social-network-typescript\\src\\redux\\profile-reducer.ts":"1","D:\\Projects\\social-network-typescript\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"2","D:\\Projects\\social-network-typescript\\src\\components\\Profile\\ProfileContainerAPI.tsx":"3","D:\\Projects\\social-network-typescript\\src\\index.tsx":"4","D:\\Projects\\social-network-typescript\\src\\redux\\dialogs-reducer.ts":"5","D:\\Projects\\social-network-typescript\\src\\components\\Users\\UsersContainer.tsx":"6","D:\\Projects\\social-network-typescript\\src\\redux\\users-selectors.ts":"7","D:\\Projects\\social-network-typescript\\src\\redux\\users-reducer.ts":"8","D:\\Projects\\social-network-typescript\\src\\components\\Navbar\\Navbar.tsx":"9","D:\\Projects\\social-network-typescript\\src\\components\\Header\\HeaderContainer.tsx":"10","D:\\Projects\\social-network-typescript\\src\\components\\Settings\\Settings.tsx":"11","D:\\Projects\\social-network-typescript\\src\\api\\api.ts":"12","D:\\Projects\\social-network-typescript\\src\\redux\\auth-reducer.ts":"13"},{"size":2986,"mtime":1617534638464,"results":"14","hashOfConfig":"15"},{"size":462,"mtime":1609086160381,"results":"16","hashOfConfig":"15"},{"size":1150,"mtime":1617538927447,"results":"17","hashOfConfig":"15"},{"size":721,"mtime":1617535548494,"results":"18","hashOfConfig":"15"},{"size":1454,"mtime":1616699647076,"results":"19","hashOfConfig":"15"},{"size":3776,"mtime":1618597094553,"results":"20","hashOfConfig":"15"},{"size":1033,"mtime":1618560031621,"results":"21","hashOfConfig":"15"},{"size":5894,"mtime":1617912188626,"results":"22","hashOfConfig":"15"},{"size":1034,"mtime":1617475980506,"results":"23","hashOfConfig":"15"},{"size":803,"mtime":1617535402027,"results":"24","hashOfConfig":"15"},{"size":164,"mtime":1609086160389,"results":"25","hashOfConfig":"15"},{"size":1605,"mtime":1618560140973,"results":"26","hashOfConfig":"15"},{"size":2534,"mtime":1617538972228,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"gptg32",{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projects\\social-network-typescript\\src\\redux\\profile-reducer.ts",["60"],"import {ProfilePageType, UserProfileType} from \"../Typing/typing\";\r\nimport {ProfileAPI, UsersAPI} from \"../api/api\";\r\nimport {AppStateType} from \"./store\";\r\n\r\n//START TYPE\r\n\r\ntype AddPostActionType = {\r\n    type: typeof ADD_POST\r\n    newPostText: string\r\n}\r\n\r\ntype SetUserProfileType = {\r\n    type: typeof SET_USER_PROFILE;\r\n    profile: UserProfileType;\r\n};\r\ntype SetStatusProfileType = {\r\n    type: typeof SET_STATUS;\r\n    status: string;\r\n};\r\n\r\n//END\r\nexport type ProfileReducerActionsType =\r\n    AddPostActionType\r\n    | SetUserProfileType\r\n    | SetStatusProfileType;\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst SET_USER_PROFILE = \"SET-USER-PROFILE\";\r\nconst SET_STATUS = \"SET-STATUS\";\r\n\r\n\r\n\r\nlet initialState: ProfilePageType = {\r\n    posts: [\r\n        {id: 1, message: \"Message one\", likesCount: 1},\r\n        {id: 2, message: \"Message two\", likesCount: 12},\r\n        {id: 3, message: \"Message three\", likesCount: 5},\r\n        {id: 4, message: \"Message four\", likesCount: 10},\r\n    ],\r\n    newPostText: \"\",\r\n    profile: {} as UserProfileType,\r\n    defaultUserId: 12063,\r\n    status: \"\"\r\n}\r\n\r\nconst profileReducer = (state: ProfilePageType = initialState, action: ProfileReducerActionsType): ProfilePageType => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: \"\"\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const addPostAC = (newPostText: string): AddPostActionType => {\r\n    return {\r\n        type: ADD_POST,\r\n        newPostText\r\n    }\r\n}\r\n\r\nexport const setUserProfile = (profile: UserProfileType): SetUserProfileType => {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        profile: profile\r\n    }\r\n}\r\nexport const setStatus = (status: string): SetStatusProfileType => {\r\n    return {\r\n        type: SET_STATUS,\r\n        status\r\n    }\r\n}\r\n\r\nexport const getUserProfile = (userId: number) => (dispatch: any) => {\r\n    UsersAPI.getProfile(userId)\r\n        .then(response => {\r\n            dispatch(setUserProfile(response.data));\r\n        });\r\n}\r\n\r\nexport const getStatus = (userId: number) => (dispatch: any) => {\r\n    ProfileAPI.getStatus(userId)\r\n        .then(response => {\r\n            dispatch(setStatus(response.data));\r\n        });\r\n}\r\n\r\nexport const updateStatus = (status: string) => (dispatch: any) => {\r\n    ProfileAPI.updateStatus(status)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setStatus(status))\r\n            }\r\n        });\r\n}\r\n\r\n\r\nexport default profileReducer\r\n\r\n\r\n\r\n\r\n",["61","62"],"D:\\Projects\\social-network-typescript\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",["63"],"import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nexport type Type = {\r\n    likesCount: number\r\n    message: string\r\n}\r\n\r\nconst Post: React.FC<Type> = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src='https://image.flaticon.com/icons/png/512/64/64572.png'/>\r\n            {props.message}\r\n            <div>\r\n                <span>like</span>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Post;","D:\\Projects\\social-network-typescript\\src\\components\\Profile\\ProfileContainerAPI.tsx",[],["64","65"],"D:\\Projects\\social-network-typescript\\src\\index.tsx",[],["66","67"],"D:\\Projects\\social-network-typescript\\src\\redux\\dialogs-reducer.ts",[],["68","69"],"D:\\Projects\\social-network-typescript\\src\\components\\Users\\UsersContainer.tsx",["70"],"D:\\Projects\\social-network-typescript\\src\\redux\\users-selectors.ts",[],"D:\\Projects\\social-network-typescript\\src\\redux\\users-reducer.ts",[],"D:\\Projects\\social-network-typescript\\src\\components\\Navbar\\Navbar.tsx",[],"D:\\Projects\\social-network-typescript\\src\\components\\Header\\HeaderContainer.tsx",[],"D:\\Projects\\social-network-typescript\\src\\components\\Settings\\Settings.tsx",[],"D:\\Projects\\social-network-typescript\\src\\api\\api.ts",[],"D:\\Projects\\social-network-typescript\\src\\redux\\auth-reducer.ts",[],{"ruleId":"71","severity":1,"message":"72","line":3,"column":9,"nodeType":"73","messageId":"74","endLine":3,"endColumn":21},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":12,"column":13,"nodeType":"81","endLine":12,"endColumn":79},{"ruleId":"75","replacedBy":"82"},{"ruleId":"77","replacedBy":"83"},{"ruleId":"75","replacedBy":"84"},{"ruleId":"77","replacedBy":"85"},{"ruleId":"75","replacedBy":"86"},{"ruleId":"77","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":50,"column":8,"nodeType":"90","endLine":50,"endColumn":10,"suggestions":"91"},"@typescript-eslint/no-unused-vars","'AppStateType' is defined but never used.","Identifier","unusedVar","no-native-reassign",["92"],"no-negated-in-lhs",["93"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["92"],["93"],["92"],["93"],["92"],["93"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["94"],"no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},"Update the dependencies array to be: [props]",{"range":"97","text":"98"},[1737,1739],"[props]"]